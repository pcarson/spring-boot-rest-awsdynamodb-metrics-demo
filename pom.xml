<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>spring-boot-rest-awsdynamodb-metrics-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-rest-awsdynamodb-metrics-demo</name>
	<description>Demo project for Spring Boot REST crud with AWS DynamoDB implementation</description>
	<properties>
		<java.version>17</java.version>
		<org.projectlombok.version>1.18.16</org.projectlombok.version>
		<org.mapstruct.version>1.5.3.Final</org.mapstruct.version>
		<openapi-webmvc-ui.version>2.0.0</openapi-webmvc-ui.version>
		<aws.java.sdk.version>1.12.94</aws.java.sdk.version>
		<javax-annotation.version>1.3.2</javax-annotation.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- devops/metrics -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-influx</artifactId>
        </dependency>
        <!-- processors -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>${lombok.version}</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- AWS-->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
            <version>${aws.java.sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
            <version>${aws.java.sdk.version}</version>
        </dependency>
        <!-- required for PostConstruct -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax-annotation.version}</version>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

       <!-- swagger NB this is the only version that works with spring boot 3 -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${openapi-webmvc-ui.version}</version>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <!--
                        exclude integration tests from unit test phase
                        so we don't have to download and run dynamodb local
                         -->
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                    <environmentVariables>
                        <AWS_ACCESS_KEY_ID>local-build-requirement</AWS_ACCESS_KEY_ID>
                        <AWS_SECRET_KEY>sssshhhh</AWS_SECRET_KEY>
                    </environmentVariables>
                </configuration>
            </plugin>
            <!--
              For Integration Tests run during the build phase, we need a local copy of dynamo running.
              So: Download the DynamoDB Local artifact.
                This will download to a Maven cache on disk and is kept until
                the cache is cleared.  The artifact is unpacked to the target
                directory of the build.
            -->
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <id>install-dynamodb_local</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>
                                https://s3.eu-central-1.amazonaws.com/dynamodb-local-frankfurt/dynamodb_local_latest.zip
                            </url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/dynamodb</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
              Next: Reserve a local port for Dynamo to start on.
                the selected port is set in the dynamodblocal.port property
                from where it can be accessed in DynamoDBConfiguration.java
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>reserve dynamodb local port</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>dynamodblocal.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            Then: Start DynamoDB_Local just before integration tests are run.
              This plugin will also cleanup the process during the
              post-integration-test phase.
            -->
            <plugin>
                <groupId>com.bazaarvoice.maven.plugins</groupId>
                <artifactId>process-exec-maven-plugin</artifactId>
                <version>0.8</version>
                <executions>
                    <execution>
                        <id>dynamodb_local</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <name>dynamodb_local</name>
                            <!--
                              Let DynamoDB finish starting, 1 second
                              should be enough.
                            -->
                            <waitAfterLaunch>1</waitAfterLaunch>
                            <arguments>
                                <argument>java</argument>
                                <argument>-Djava.library.path=dynamodb/DynamoDBLocal_lib</argument>
                                <argument>-jar</argument>
                                <argument>dynamodb/DynamoDBLocal.jar</argument>
                                <!--
                                  Use the port that was reserved in step 2
                                -->
                                <argument>-port</argument>
                                <argument>${dynamodblocal.port}</argument>
                                <argument>-sharedDb</argument>
                                <argument>-inMemory</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            Finally: run integration tests via the failsafe plugin.
              https://maven.apache.org/surefire/maven-failsafe-plugin/
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <dynamodb.endpoint>http://localhost:${dynamodblocal.port}</dynamodb.endpoint>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <AWS_ACCESS_KEY_ID>local-build-requirement</AWS_ACCESS_KEY_ID>
                        <AWS_SECRET_KEY>sssshhhh</AWS_SECRET_KEY>
                    </environmentVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.9</version>
                <executions>
                    <execution>
                        <id>coverage-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>coverage-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>com/example/demo/dto/**/*.class</exclude>
                                <exclude>com/example/demo/configuration/**/*.class</exclude>
                                <exclude>com/example/demo/mapper/**/*.class</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

    <repositories>
        <repository>
            <id>maven central</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <url>https://repo.spring.io/milestone/</url>
        </repository>

    </repositories>
</project>
